/* --- Material Design 3 Color Variables (Light Mode) --- */
:root {
    --primary: #6750A4;
    --on-primary: #FFFFFF;
    --primary-container: #EADDFF;
    --on-primary-container: #21005D;
    --secondary: #625B71;
    --on-secondary: #FFFFFF;
    --secondary-container: #E8DEF8;
    --on-secondary-container: #1D192B;
    --tertiary: #7D5260;
    --on-tertiary: #FFFFFF;
    --tertiary-container: #FFD8E4;
    --on-tertiary-container: #31111D;
    --error: #B3261E;
    --on-error: #FFFFFF;
    --error-container: #F9DEDC;
    --on-error-container: #410E0B;
    --background: #FFFBFE;
    --on-background: #1C1B1F;
    --surface: #FFFBFE;
    --on-surface: #1C1B1F;
    --surface-variant: #E7E0EC;
    --on-surface-variant: #49454F;
    --outline: #79747E;
    --shadow: #000000;
    --inverse-surface: #313033;
    --inverse-on-surface: #F4EFF4;
    --inverse-primary: #D0BCFF; /* Used for subtle highlights or alternative primary shades */

    /* Custom variables for input fields based on Material Design 3 guidelines */
    --card-background: rgba(255, 255, 255, 0.95); /* Slightly transparent card */
    --input-border-color: var(--outline);
    --input-focus-border-color: var(--primary);
    --input-label-color: var(--on-surface-variant);
    --input-label-focus-color: var(--primary);
}

/* --- Dark Mode Variables --- */
body.dark-mode {
    --primary: #D0BCFF; /* Lighter primary for dark mode */
    --on-primary: #381E72; /* Darker text on lighter primary */
    --primary-container: #4F378B;
    --on-primary-container: #EADDFF;
    --secondary: #CCC2DC;
    --on-secondary: #332D41;
    --secondary-container: #4A4458;
    --on-secondary-container: #E8DEF8;
    --tertiary: #EFB8C8;
    --on-tertiary: #492532;
    --tertiary-container: #633B48;
    --on-tertiary-container: #FFD8E4;
    --error: #F2B8B5; /* Lighter error for dark mode */
    --on-error: #601410;
    --error-container: #8C1D18;
    --on-error-container: #F9DEDC;
    --background: #1C1B1F; /* Dark background */
    --on-background: #E6E1E5; /* Light text on dark background */
    --surface: #1C1B1F; /* Dark surface */
    --on-surface: #E6E1E5; /* Light text on dark surface */
    --surface-variant: #49454F; /* Darker surface variant */
    --on-surface-variant: #CAC4D0; /* Lighter text on dark surface variant */
    --outline: #938F99;
    --shadow: #000000; /* Shadow remains black for contrast */
    --inverse-surface: #E6E1E5;
    --inverse-on-surface: #313033;
    --inverse-primary: #6750A4; /* Darker inverse primary for dark mode */

    /* Custom variables for input fields based on Material Design 3 guidelines */
    --card-background: rgba(30, 30, 30, 0.95); /* Dark semi-transparent card */
    --input-border-color: var(--on-surface-variant); /* Adjust for visibility */
    --input-focus-border-color: var(--primary); /* Lighter focus color */
    --input-label-color: var(--on-surface-variant);
    --input-label-focus-color: var(--primary); /* Maintain primary for focus */
}

/* --- Global & Typography --- */
html, body {
    height: 100%;
    margin: 0;
    font-family: "Roboto", sans-serif;
    background: var(--background);
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    background-image: url('../NHCE_Campus.jpg');
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
    background-attachment: fixed;
    transition: background-color 0.3s ease; /* Smooth transition for dark mode */
}

h3.poppins-title {
    font-family: 'Poppins', sans-serif;
    font-weight: 700;
    font-size: clamp(32px, 8vw, 56px);
    color: var(--on-background);
    text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.1);
    margin-top: 20px;
    margin-bottom: 20px;
    text-align: center;
    line-height: 1.2;
    transition: color 0.3s ease; /* For dark mode */
}

h6.poppins-title {
    font-family: 'Poppins', sans-serif;
    font-weight: 500;
    font-size: clamp(18px, 4vw, 24px);
    color: var(--on-surface);
    margin-bottom: 1.5rem;
    transition: all 0.4s ease; /* For hiding animation */
    transform-origin: top; /* For hiding animation */
}

/* --- Top Left Logo --- */
.top-left-logo {
    position: absolute;
    top: 20px;
    left: 20px;
    height: clamp(80px, 15vw, 160px);
    width: auto;
    z-index: 1000;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    border-radius: 8px;
}

/* --- Login Card --- */
.login-card {
    max-width: 420px;
    width: 90%;
    padding: 1.5rem 2.5rem;
    border-radius: 20px;
    background-color: var(--card-background);
    box-shadow: 0 12px 24px rgba(0, 0, 0, 0.2);
    margin: 20px auto;
    position: relative;
    top: unset;
    right: unset;
    bottom: unset;
    left: unset;
    display: flex;
    flex-direction: column;
    align-items: center;
    overflow: hidden;
    transition: max-height 0.6s ease-in-out, background-color 0.3s ease, box-shadow 0.3s ease; /* Added for dark mode */
}

/* --- Generic Avatar --- */
.genericavatar {
    background-color: var(--primary-container);
    height: 100px;
    width: 100px;
    border-radius: 50%;
    margin: 0 auto 1.5rem;
    display: flex;
    align-items: center;
    justify-content: center;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    overflow: hidden;
    transition: background-color 0.3s ease; /* For dark mode */
}

.inneravatar {
    position: relative;
    height: 80px;
    width: 80px;
    transform: rotate(-90deg);
}

.circle, .circle2 {
    position: absolute;
    background-color: var(--primary);
    border-radius: 50%;
    transition: background-color 0.3s ease; /* For dark mode */
}

.circle {
    width: 40px;
    height: 40px;
    top: 20px;
    left: 20px;
}

.circle2 {
    width: 150px;
    height: 40px;
    top: 20px;
}

.circle-left {
    left: -120px;
    bottom: 12px;
    width: 70px;
    height: 80px;
    background-color: var(--primary);
    transform: translateX(80px) translateY(-18px);
}

.circle-right {
    right: 0;
    background-color: var(--primary);
}

/* --- Segmented Button --- */
.segmentedbutton {
    height: 56px; /* Slightly taller for more presence */
    width: 100%;
    max-width: 320px;
    margin: 0 auto 2.5rem; /* Increased bottom margin for separation */
    border: 1px solid var(--outline);
    border-radius: 100px; /* Fully rounded pill */
    background: var(--surface);
    display: flex;
    overflow: hidden; /* Important for border-radius on inner elements */
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1); /* Subtle initial shadow */
    transition: box-shadow 0.3s ease, border-color 0.3s ease, background-color 0.3s ease;
}

/* Individual Segments (Faculty/Student) */
.segment-start, .segment-end {
    flex: 1;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    position: relative;
    z-index: 1; /* Ensure content is above background */
    overflow: hidden; /* For future ripple effects if added */
    transition: background-color 0.3s ease, color 0.3s ease, transform 0.2s ease-out, box-shadow 0.2s ease-out;
}

.segment-start:not(.active):hover,
.segment-end:not(.active):hover {
    background-color: var(--surface-variant); /* Lighter background on hover for inactive */
    transform: translateY(-1px); /* Subtle lift */
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15); /* Increased shadow on hover */
    z-index: 2; /* Bring hovered element slightly to front */
}

/* Inner Container for Active State */
.container, .container2 {
    height: calc(100% - 8px); /* Slightly smaller than parent to show border */
    width: calc(100% - 8px);  /* Slightly smaller than parent to show border */
    border-radius: 96px; /* Adjusted radius to match parent's internal curve */
    transition: background 0.3s ease, color 0.3s ease, transform 0.3s ease, box-shadow 0.3s ease;
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
    font-size: 1rem;
    font-weight: 500;
    color: var(--on-surface-variant); /* Default text color */
}

.container.active, .container2.active {
    background: var(--primary); /* Solid primary color for active background */
    color: var(--on-primary); /* Text color for active state */
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2); /* Shadow for active state */
    transform: scale(0.98); /* Slightly 'pressed' look when active */
}

/* Separator Line (Simulated) */
.segment-start::after {
    content: '';
    position: absolute;
    right: 0;
    top: 20%; /* Vertically center */
    height: 60%; /* Height of the separator */
    width: 1px;
    background-color: var(--outline); /* Color of the separator */
    transition: background-color 0.3s ease;
    z-index: 3; /* Ensure separator is on top */
}

/* Hide separator when segment-start is active */
.segment-start.active::after {
    background-color: transparent; /* Hide separator when active */
}

/* Content Wrapper within Container */
.segment-content {
    display: flex;
    align-items: center;
    gap: 8px; /* Space between label and icon */
    white-space: nowrap; /* Prevent wrapping */
}

/* Selected Icon (now a Material Icon) */
.selectedicon {
    font-size: 20px; /* Material Icon font size */
    color: var(--on-primary); /* Default color, overridden by active state */
    opacity: 0;
    transition: opacity 0.3s ease, color 0.3s ease; /* Smoother transition */
    display: flex; /* Ensure it behaves as a flex item */
    align-items: center;
    justify-content: center;
}
.active .selectedicon {
    opacity: 1;
}

/* Adjustments for the segment when active so the icon gets the right color */
.container.active .selectedicon,
.container2.active .selectedicon {
    color: var(--on-primary); /* Explicitly set to on-primary when active */
}

/* For inactive state, if the icon is ever made visible, it should contrast */
.container:not(.active) .selectedicon,
.container2:not(.active) .selectedicon {
    color: var(--on-surface-variant); /* Example: Use on-surface-variant for inactive text/icons */
}

/* Text Labels */
.label-text, .label-text2 {
    font-size: 1rem;
    font-family: "Roboto", sans-serif;
    color: inherit; /* Inherit color from parent (.container/.container2) */
    display: flex;
    align-items: center;
}

/* --- Input Fields --- */
.input-field {
    margin-bottom: 1.5rem;
    position: relative;
}

.input-field label {
    color: var(--input-label-color) !important;
    font-size: 1.1rem !important;
    font-weight: 500 !important;
    top: 18px !important;
    left: 48px !important;
    pointer-events: none;
    transition: all 0.2s ease-out, color 0.3s ease; /* Added color transition */
}

.input-field input[type=text]:not(.browser-default),
.input-field input[type=password]:not(.browser-default),
.input-field input[type=email]:not(.browser-default) {
    width: calc(100% - 48px);
    padding: 12px 16px;
    border: 1px solid var(--input-border-color);
    border-radius: 8px;
    background-color: var(--surface-variant);
    box-shadow: none !important;
    color: var(--on-surface);
    box-sizing: border-box;
    font-size: 1rem;
    height: unset;
    margin-bottom: 0;
    transition: border-color 0.2s ease, background-color 0.2s ease, box-shadow 0.2s ease, color 0.3s ease;
}

.input-field input[type=text]:not(.browser-default):focus,
.input-field input[type=password]:not(.browser-default):focus,
.input-field input[type=email]:not(.browser-default):focus {
    border: 2px solid var(--input-focus-border-color) !important;
    background-color: var(--surface);
    box-shadow: 0 0 0 4px var(--primary-container) !important;
}

.input-field input[type=text]:focus + label,
.input-field input[type=password]:focus + label,
.input-field input[type=email]:focus + label,
.input-field input[type=text]:not(.browser-default):valid + label,
.input-field input[type=password]:not(.browser-default):valid + label,
.input-field input[type=email]:not(.browser-default):valid + label,
.input-field input[type=text]:not(.browser-default):focus:not([value=""]) + label,
.input-field input[type=password]:not(.browser-default):focus:not([value=""]) + label,
.input-field input[type=email]:not(.browser-default):focus:not([value=""]) + label {
    top: 0 !important;
    font-size: 0.95rem !important;
    font-weight: 500 !important;
    color: var(--input-label-focus-color) !important;
}

.input-field input[type=text]:not(.browser-default):not(:focus):not([value=""]) + label,
.input-field input[type=password]:not(.browser-default):not(:focus):not([value=""]) + label,
.input-field input[type=email]:not(.browser-default):not(:focus):not([value=""]) + label {
    top: 0 !important;
    font-size: 0.95rem !important;
    font-weight: 500 !important;
    color: var(--input-label-color) !important;
}

.input-field .material-icons.prefix {
    color: var(--input-label-color) !important;
    font-size: 24px;
    line-height: 48px;
    position: absolute;
    left: 8px;
    top: 0;
    transition: color 0.3s ease; /* For dark mode */
}

.toggle-pw {
    position: absolute;
    right: 12px;
    top: 50%;
    transform: translateY(-50%);
    cursor: pointer;
    color: var(--input-label-color) !important;
    font-size: 20px !important;
    transition: color 0.3s ease; /* For dark mode */
}

/* --- Buttons --- */
button.state-layer {
    height: 48px;
    width: 100%;
    max-width: 250px;
    padding: 0 24px;
    margin-top: 1rem;
    background-color: var(--primary);
    color: var(--on-primary);
    border-radius: 100px;
    font-size: 1rem;
    font-weight: 500;
    letter-spacing: 0.5px;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
    transition: all 0.3s ease; /* Ensure smooth transitions for all properties */
    display: flex;
    justify-content: center;
    align-items: center;
    text-transform: uppercase;
    position: relative; /* For the shine effect */
    overflow: hidden; /* Important for the shine effect */
    border: none; /* Ensure no default button border */
    cursor: pointer;
}

/* Shine effect pseudo-element */
button.state-layer::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%; /* Start off-screen to the left */
    width: 100%;
    height: 100%;
    background: rgba(255, 255, 255, 0.2); /* Semi-transparent white for the shine */
    transform: skewX(-20deg); /* Angle the shine */
    transition: left 0.4s ease-out; /* Animate the shine moving to the right */
}

/* Hover state for the button */
button.state-layer:hover {
    background: linear-gradient(45deg, var(--primary), var(--inverse-primary)); /* Maintain the gradient on hover */
    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.35); /* Even stronger shadow on hover */
    transform: translateY(-2px) scale(1.01); /* Subtle lift and slight scale */
}

/* Hover state for the shine effect */
button.state-layer:hover::before {
    left: 100%; /* Move the shine across the button */
}

/* Active (click) state for the button */
button.state-layer:active {
    transform: scale(0.98); /* Slightly shrink on click */
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2); /* Reduce shadow on click */
}

/* --- Link Styling (for "Not registered yet?") --- */
h6 a {
    color: var(--primary); /* Uses primary variable for light mode */
    text-decoration: none;
    font-weight: 500;
    transition: color 0.2s ease;
}

h6 a:hover {
    color: var(--inverse-primary); /* Uses inverse-primary variable for light mode hover */
    text-decoration: underline;
}

/* --- Register Form --- */
#registerForm fieldset {
    border: 1px solid var(--outline);
    border-radius: 16px;
    padding: 1rem;
    margin: 1rem 0;
    width: 100%;
    box-sizing: border-box;
    transition: border-color 0.3s ease; /* For dark mode */
}

#registerForm legend {
    color: var(--primary);
    font-size: 1.2rem;
    font-weight: 500;
    padding: 0 10px;
    transition: color 0.3s ease; /* For dark mode */
}

#registerForm table {
    width: 100%;
    border-collapse: collapse;
    margin-top: 1rem;
    background: none;
    box-shadow: none;
    border: none;
}

#registerForm table td {
    padding: 10px 0;
    border: none;
    vertical-align: middle;
}

#registerForm label {
    color: var(--on-surface-variant);
    font-size: 0.95rem;
    font-weight: 400;
    white-space: nowrap;
    transition: color 0.3s ease; /* For dark mode */
}

#registerForm input.control {
    width: calc(100% - 20px);
    padding: 10px 12px;
    border: 1px solid var(--input-border-color);
    border-radius: 8px;
    background-color: var(--surface-variant);
    color: var(--on-surface);
    font-size: 0.95rem;
    box-sizing: border-box;
    transition: border-color 0.2s ease, background-color 0.2s ease, box-shadow 0.2s ease, color 0.3s ease;
}

#registerForm input.control:focus {
    border: 2px solid var(--input-focus-border-color);
    background-color: var(--surface);
    box-shadow: 0 0 0 4px var(--primary-container);
    outline: none;
}

#registerForm button {
    height: 40px;
    padding: 0 20px;
    border-radius: 100px;
    font-size: 0.9rem;
    font-weight: 500;
    text-transform: uppercase;
    cursor: pointer;
    transition: background-color 0.2s ease, box-shadow 0.2s ease, color 0.3s ease;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    margin: 5px;
    border: none; /* Ensure no default button border */
}

#registerBtn {
    background-color: var(--primary);
    color: var(--on-primary);
}

#registerBtn:hover {
    background-color: var(--inverse-primary);
    box-shadow: 0 3px 6px rgba(0, 0, 0, 0.15);
}

#registerForm button[type="reset"] {
    background-color: var(--surface-variant);
    color: var(--on-surface-variant);
    border: 1px solid var(--outline);
}

#registerForm button[type="reset"]:hover {
    background-color: var(--secondary-container);
    box-shadow: 0 3px 6px rgba(0, 0, 0, 0.15);
}

#registerForm center a {
    color: var(--primary);
    text-decoration: none;
    margin-top: 1rem;
    display: inline-block;
    font-weight: 500;
    transition: color 0.3s ease; /* For dark mode */
}

#registerForm center a:hover {
    text-decoration: underline;
}

/* --- Loader & Overlay --- */
.loading-overlay {
    background-color: rgba(255, 255, 255, 0.8); /* Semi-transparent white background */
    backdrop-filter: blur(6px); /* Stronger blur for a frosted glass effect */
    z-index: 999; /* Ensures it's on top of everything */
    position: absolute;
    top: 0; left: 0; right: 0; bottom: 0; /* Covers the entire parent (login-card in this case) */
    display: flex; /* Flexbox for centering the loader */
    align-items: center;
    justify-content: center;
    transition: opacity 0.3s ease; /* Smooth fade-in/out */
    /* Initially hidden via JavaScript: display: none; */
}

.loader {
    border: 4px solid var(--primary-container); /* Base color for the spinner */
    border-top: 4px solid var(--primary); /* Primary color for the spinning part */
    border-radius: 50%; /* Makes it a circle */
    width: 50px;
    height: 50px;
    animation: spin 1s linear infinite, glow 1.5s infinite alternate; /* Two animations combined */
}

@keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
}

@keyframes glow {
    from { box-shadow: 0 0 8px var(--primary); } /* Start with a subtle glow */
    to { box-shadow: 0 0 20px var(--primary), 0 0 30px var(--inverse-primary); } /* Expand and intensify glow */
}

/* --- Custom Message Overlay Styles --- */
#customMessageOverlay {
    position: fixed; /* Fixed to viewport */
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.4); /* Dark semi-transparent background */
    backdrop-filter: blur(8px); /* Blurs content behind it */
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 1000; /* Ensure it's on top of everything */
    opacity: 0; /* Start hidden for fade-in effect */
    visibility: hidden; /* Also hidden for accessibility/click events */
    transition: opacity 0.3s ease, visibility 0.3s ease; /* Smooth transition */
}

#customMessageOverlay.show {
    opacity: 1;
    visibility: visible;
}

#customMessageContent {
    background-color: var(--surface); /* White or light background for the message box */
    padding: 2.5rem;
    border-radius: 20px; /* Rounded corners for the message box */
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
    text-align: center;
    max-width: 350px; /* Limit width for better readability */
    width: 90%; /* Responsive width */
    transform: translateY(-20px); /* Start slightly up for slide-down effect */
    opacity: 0; /* Hidden for content fade-in */
    transition: transform 0.3s ease, opacity 0.3s ease, background-color 0.3s ease, box-shadow 0.3s ease;
    display: flex; /* Use flexbox for icon and text alignment */
    flex-direction: column;
    align-items: center;
    gap: 1.2rem;
}

#customMessageOverlay.show #customMessageContent {
    transform: translateY(0); /* Slide down into place */
    opacity: 1;
}

#customMessageContent i {
    font-size: 3.5rem; /* Large icon */
    margin-bottom: 0.5rem;
    transition: color 0.3s ease; /* For dark mode */
}

#customMessageContent p {
    font-size: 1.1rem;
    color: var(--on-surface);
    margin: 0;
    transition: color 0.3s ease; /* For dark mode */
}

#customMessageContent button {
    height: 48px;
    padding: 0 24px;
    margin-top: 1.5rem;
    background-color: var(--primary); /* Default button color */
    color: var(--on-primary);
    border-radius: 100px;
    font-size: 1rem;
    font-weight: 500;
    letter-spacing: 0.5px;
    box-shadow: 0 2px 5px rgba(0,0,0,0.2);
    transition: background-color 0.2s ease, box-shadow 0.2s ease, color 0.3s ease;
    border: none;
    cursor: pointer;
    text-transform: uppercase;
}

#customMessageContent button:hover {
    background-color: var(--inverse-primary);
    box-shadow: 0 4px 8px rgba(0,0,0,0.25);
}

/* Color variations for messages */
#customMessageContent.success i { color: var(--primary); }
#customMessageContent.error i { color: var(--error); }
#customMessageContent.info i { color: var(--outline); } /* Using outline for info */

#customMessageContent.success button { background-color: var(--primary); }
#customMessageContent.error button { background-color: var(--error); }
#customMessageContent.info button { background-color: var(--outline); }

/* --- Dark Mode Overrides for Specific Elements --- */
body.dark-mode .segmentedbutton {
    border-color: var(--outline); /* Ensure it's visible in dark mode */
    background: var(--surface);
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.3); /* Slightly stronger shadow */
}

body.dark-mode .segment-start:not(.active):hover,
body.dark-mode .segment-end:not(.active):hover {
    background-color: var(--surface-variant); /* Darker hover background for inactive */
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.4);
}

body.dark-mode .container.active,
body.dark-mode .container2.active {
    background: var(--primary); /* Dark mode primary */
    color: var(--on-primary); /* Dark mode on-primary */
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.4);
}

body.dark-mode .segment-start::after {
    background-color: var(--outline); /* Dark mode outline color */
}

/* Dark Mode Overrides for Link */
body.dark-mode h6 a {
    color: var(--inverse-primary); /* Lighter color for links in dark mode */
}

body.dark-mode h6 a:hover {
    color: var(--primary); /* Hover color for links in dark mode */
}

/* Loader and Message Overlay adjustments for dark mode */
body.dark-mode .loading-overlay {
    background-color: rgba(0, 0, 0, 0.7); /* Darker blur overlay */
}

body.dark-mode .loader {
    border-color: var(--primary-container);
    border-top-color: var(--primary);
}

body.dark-mode #customMessageContent {
    background-color: var(--surface); /* Uses the dark mode surface */
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.6); /* Stronger shadow in dark mode */
}

body.dark-mode #customMessageContent p {
    color: var(--on-surface); /* Uses the dark mode on-surface text color */
}

/* Ensure icons adapt */
body.dark-mode #customMessageContent.success i { color: var(--primary); }
body.dark-mode #customMessageContent.error i { color: var(--error); }
body.dark-mode #customMessageContent.info i { color: var(--outline); }
body.dark-mode #customMessageContent.success button { background-color: var(--primary); }
body.dark-mode #customMessageContent.error button { background-color: var(--error); }
body.dark-mode #customMessageContent.info button { background-color: var(--outline); }

/* --- Utility Classes --- */
.title-hidden {
    transform: scaleY(0);
    opacity: 0;
    height: 0 !important;
    margin-bottom: 0 !important;
}

.login-card.scrollable {
    overflow-x: hidden;
    overflow-y: auto;
    max-height: 85vh;
    scrollbar-width: thin;
    scrollbar-color: var(--primary) transparent;
}

.login-card.scrollable::-webkit-scrollbar { width: 8px; }
.login-card.scrollable::-webkit-scrollbar-track { background: transparent; }
.login-card.scrollable::-webkit-scrollbar-thumb {
    background: var(--primary-container);
    border-radius: 8px;
}
.login-card.scrollable::-webkit-scrollbar-thumb:hover {
    background: var(--inverse-primary);
}
 .otp-input-container {
        display: flex;
        justify-content: center;
        gap: 10px; /* Space between OTP boxes */
        margin-top: 20px;
        margin-bottom: 20px;
    }
    .otp-input {
        width: 45px; /* Adjust size as needed */
        height: 45px;
        text-align: center;
        font-size: 1.5rem;
        border: 1px solid #9e9e9e; /* Materialize input border */
        border-radius: 4px;
        transition: border-color 0.3s ease;
        -webkit-appearance: none; /* Remove default browser styling */
        -moz-appearance: textfield; /* Firefox specific */
    }
    .otp-input:focus {
        border-color: #2196f3; /* Materialize blue focus color */
        box-shadow: 0 0 0 1px #2196f3; /* Focus glow */
        outline: none;
    }
/* --- Media Queries (Responsive Design) --- */
@media (max-width: 768px) {
    h3.poppins-title {
        font-size: clamp(28px, 7vw, 48px);
        margin-top: 10px;
        margin-bottom: 15px;
    }
    /* --- Disable Mobile Tap Highlight --- */
a,
button,
.segment-start,
.segment-end,
.toggle-pw {
    -webkit-tap-highlight-color: transparent;
}
    .top-left-logo {
        top: 10px;
        left: 10px;
        height: clamp(60px, 12vw, 100px);
    }
    .login-card {
        width: 95%;
        padding: 1.5rem;
        margin: 20px auto;
        border-radius: 16px;
    }
    .genericavatar {
        height: 100px;
        width: 100px;
        margin-bottom: 1.5rem;
    }
    .inneravatar {
        height: 70px;
        width: 70px;
    }
    .circle { width: 35px; height: 35px; top: 18px; left: 18px; }
    .circle2 { width: 120px; height: 35px; top: 18px; }
    .circle-left { left: -100px; bottom: 10px; width: 60px; height: 70px; transform: translateX(70px) translateY(-15px); }

    .segmentedbutton {
        height: 48px;
        max-width: 280px;
        margin-bottom: 2rem;
    }
    .container, .container2 {
        height: calc(100% - 6px); /* Adjust internal spacing */
        width: calc(100% - 6px);
        border-radius: 94px; /* Adjust radius */
    }
    .segment-content {
        gap: 6px; /* Slightly less gap on mobile */
    }
    .selectedicon {
        font-size: 18px; /* Adjusted font size for mobile */
    }

    .input-field {
        margin-bottom: 1.5rem;
    }
    .input-field label {
        font-size: 0.9rem;
        left: 48px !important;
    }
    .input-field input:not(.browser-default) {
        padding: 10px 14px;
        font-size: 0.9rem;
    }
    .input-field input:focus + label,
    .input-field input:not(.browser-default):valid + label,
    .input-field input:not(.browser-default):focus:not([value=""]) + label,
    .input-field input:not(.browser-default):not(:focus):not([value=""]) + label {
        font-size: 0.65rem !important;
    }
    .input-field .material-icons.prefix {
        font-size: 20px;
        line-height: 40px;
    }
    .toggle-pw {
        font-size: 18px !important;
    }
    button.state-layer {
        height: 44px;
        font-size: 0.95rem;
        max-width: 220px;
    }
    h6 {
        font-size: clamp(14px, 3.5vw, 18px);
    }
}